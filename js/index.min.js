/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/banner-slider.js":
/*!********************************************!*\
  !*** ./src/js/components/banner-slider.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nconst innerBannerSwiper = new Swiper(\".banner-slider_inner .swiper\", {\n    slidesPerView: 1,\n    // observer: true,\n    // observeParents: true,\n    // resizeObserver: true,\n    speed: 800,\n    effect: \"fade\",\n    fadeEffect: {\n        crossFade: true,\n    },\n    preventInteractionOnTransition: true,\n    pagination: {\n        el: \".banner-section .swiper-pagination\",\n        type: \"fraction\",\n        formatFractionCurrent: function(current) {\n            return current < 9 ? \"0\" + current : current\n        },\n        formatFractionTotal: function(total) {\n            return total < 9 ? \"0\" + total : total\n        },\n        renderFraction: function (currentClass, totalClass) {\n            return '<span class=\"' + currentClass + '\"></span>' +\n            '<span class=\"swiper-pagination-divider\"> â€” </span>' +\n            '<span class=\"' + totalClass + '\"></span>';\n        },\n    },\n    navigation: {\n        nextEl: \".banner-section .swiper-button-next\",\n        prevEl: \".banner-section .swiper-button-prev\",\n    },\n})\n\nconst outerBannerSwiper = new Swiper(\".banner-slider_outer .swiper\", {\n    slidesPerView: 1,\n    speed: 800,\n})\n\nouterBannerSwiper.controller.control = innerBannerSwiper;\ninnerBannerSwiper.controller.control = outerBannerSwiper;\n\n//# sourceURL=webpack://gulp-start/./src/js/components/banner-slider.js?");

/***/ }),

/***/ "./src/js/components/service.js":
/*!**************************************!*\
  !*** ./src/js/components/service.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nclass ServiceAccordion {\n    lock = false;\n\n    constructor(elem) {\n        this.elem = elem\n    }\n\n    open() {\n\n    }\n\n    close() {\n\n    }\n}\n\nlet serviceEls = document.querySelectorAll(\".service\")\n\nserviceEls.forEach(serviceEl => {\n    let lock = false\n    serviceEl.addEventListener(\"click\", (e) => {\n        if (lock) {\n            return\n        }\n        \n        let closeButtonEl = serviceEl.querySelector(\".service__button\")\n        let contentEl = serviceEl.querySelector(\".service__content\");\n        let bodyEl = contentEl.querySelector(\".service__body\");\n        let previewEl = contentEl.querySelector(\".service__preview\");\n        \n        let isOpen = serviceEl.classList.contains(\"service_open\")\n        if (e.target.closest(\".service__content\") && isOpen) {\n            return\n        }\n        \n        lock = true\n        closeButtonEl.classList.toggle(\"service__button_open\")\n\n\n        if (window.innerWidth > 992) {\n            contentEl.style.cssText = `\n                height: ${contentEl.offsetHeight}px;\n                opacity: 0;\n            `\n            contentEl.addEventListener(\"transitionend\", () => {\n                if (isOpen) {\n                    bodyEl.style.height = \"\"\n                    previewEl.style.height = \"\";\n                    contentEl.style.height = previewEl.offsetHeight + \"px\"\n                } else {\n                    contentEl.style.height = bodyEl.scrollHeight + \"px\"\n                    previewEl.style.height = \"0\";\n                    bodyEl.style.height = \"auto\"\n                }\n\n                contentEl.addEventListener(\"transitionend\", () => {\n                    if (isOpen) {\n                        contentEl.style.cssText = \"\"\n                    } else {\n                        contentEl.style.cssText = \"height: auto\"\n                    }\n                    // !isOpen && (contentEl.style.height = \"auto\");\n                    // contentEl.style.opacity = \"\"\n                    serviceEl.classList.toggle(\"service_open\")\n                    contentEl.addEventListener(\"transitionend\", () => lock = false, { once: true })\n                }, { once: true })\n\n            }, { once: true })\n\n        } else {\n            if (isOpen) {\n                contentEl.style.height = contentEl.offsetHeight + \"px\"\n                setTimeout(() => {\n                    previewEl.style = \"\"\n                    bodyEl.style = \"\"\n                    contentEl.style.height = \"\"\n                })\n            } else {\n                contentEl.style.height =  contentEl.scrollHeight + \"px\"\n                previewEl.style.height = \"0\";\n                bodyEl.style.height = \"auto\"\n            }\n            contentEl.addEventListener(\"transitionend\", () => {\n                if (contentEl.offsetHeight) {\n                    contentEl.style.height = \"auto\"\n                }\n                serviceEl.classList.toggle(\"service_open\")\n                lock = false\n            }, { once: true })\n        }\n    })\n})\n\n\n\n//# sourceURL=webpack://gulp-start/./src/js/components/service.js?");

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_service_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/service.js */ \"./src/js/components/service.js\");\n/* harmony import */ var _components_banner_slider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/banner-slider.js */ \"./src/js/components/banner-slider.js\");\nlet lock = false\n\nlet player;\nlet ytScriptLoaded = false;\nfunction loadVideo() {\n  \n    (function loadYoutubeIFrameApiScript() {\n      const tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n  \n      const firstScriptTag = document.querySelector(\"script[src='js/script.min.js']\")\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n  \n      tag.onload = () => ytScriptLoaded = true;\n    })();\n  \n    let player = null;\n  \n    function setupPlayer() {\n      /**\n       * THIS FAILS!!!!!\n       */\n      // player = new YT.Player(\"player\", {\n      //   height: \"390\",\n      //   width: \"640\",\n      //   videoId: \"M7lc1UVf-VE\",\n      //   events: {\n      //     onReady: onPlayerReady,\n      //     onStateChange: onPlayerStateChange\n      //   }\n      // });\n  \n      /**\n       * Need to wait until Youtube Player is ready!\n       *\n       * YT.ready is not documented in https://developers.google.com/youtube/iframe_api_reference\n       * but found from https://codesandbox.io/s/youtube-iframe-api-tpjwj\n       */\n        window.YT.ready(function() {\n            player = new window.YT.Player(\"player\", {\n                height: \"390\",\n                width: \"640\",\n                videoId: \"fDIyAXQ_PjI\",\n                events: {\n                    onReady: onPlayerReady,\n                    onStateChange: onPlayerStateChange\n                }\n            });\n        });\n    }\n  \n    function playFullscreen () {\n        player.playVideo();//won't work on mobile\n        let iframe = document.querySelector(\"iframe\")\n\n        \n        iframe.addEventListener(\"keydown\", (e) => {\n            const openVideoEl = document.querySelector(\"#youtube-container._open\")\n            if (e.which === 27 && openVideoEl) {\n                closeYouTubeVideo(openVideoEl)\n            }\n        })\n\n        var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;\n        if (requestFullScreen) {\n          requestFullScreen.bind(iframe)();\n        }\n    }\n\n    function onPlayerReady(event) {\n        console.log(\"ready\")\n        playFullscreen(); \n        event.target.playVideo()\n    }\n  \n    function onPlayerStateChange(event) {\n      var videoStatuses = Object.entries(window.YT.PlayerState);\n      console.log(videoStatuses.find(status => status[1] === event.data)[0]);\n    }\n    return setupPlayer\n  }\n\nlet setupPlayer\n\nif (document.readyState !== \"loading\") {\n    console.info(`document.readyState ==>`, document.readyState);\n    setupPlayer = loadVideo();\n} else {\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        console.info(`DOMContentLoaded ==>`, document.readyState);\n        setupPlayer = loadVideo();\n    });\n}\n\nfunction openYouTubeVideo(videoEl) {\n    if (lock) {\n        return \n    }\n\n    const videoContainer = document.getElementById(\"youtube-container\")\n    const src = videoEl.getAttribute(\"href\");\n\n    lock = true\n    document.body.classList.add(\"body_lock\")\n    \n    videoContainer.classList.add(\"_open\")\n    videoContainer.addEventListener(\"transitionend\", () => {\n        lock = false\n        setupPlayer()\n    }, { once: true })\n}\n\nfunction closeYouTubeVideo(videoEl) {\n    if (lock) {\n        return \n    }\n    videoEl.querySelector(\"iframe\").remove()\n    videoEl.innerHTML = \"<div id='player'></div>\"\n    videoEl.classList.remove(\"_open\")\n    document.body.classList.remove(\"body_lock\")\n    scrollTriggerInstance && scrollTriggerInstance.refresh()\n}\n\nnew Swiper(\".hero-section__slider .swiper\", {\n    slidesPerView: 1,\n    speed: 800,// (getComputedStyle(document.documentElement).getPropertyValue('--screen-diff') && 0),\n    observer: true,\n    parallax: true,\n    preventInteractionOnTransition: true,\n    pagination: {\n        el: \".hero-section .swiper-pagination\",\n        type: \"fraction\",\n        formatFractionCurrent: function(current) {\n            return current < 9 ? \"0\" + current : current\n        },\n        formatFractionTotal: function(total) {\n            return total < 9 ? \"0\" + total : total\n        },\n        renderFraction: function (currentClass, totalClass) {\n            return '<span class=\"' + currentClass + '\"></span>' +\n                    '<span class=\"swiper-pagination-divider\"> â€” </span>' +\n                    '<span class=\"' + totalClass + '\"></span>';\n        },\n    },\n    navigation: {\n        nextEl: \".hero-section .swiper-button-next\",\n        prevEl: \".hero-section .swiper-button-prev\",\n    },\n})\n\n\ndocument.querySelectorAll(\".hero-slide__video\").forEach(videoEl => {\n    videoEl.addEventListener(\"click\", e => {\n        e.preventDefault()\n        if (!ytScriptLoaded) {\n            return \n        }\n        openYouTubeVideo(videoEl)\n    })\n})\n\n\n// Ð·Ð°ÐºÑ€Ñ‹Ñ‚Ð¸Ðµ Ð²Ð¸Ð´ÐµÐ¾\ndocument.addEventListener(\"keydown\", (e) => {\n    const openVideoEl = document.querySelector(\"#youtube-container._open\")\n    if (e.which === 27 && openVideoEl) {\n        closeYouTubeVideo(openVideoEl)\n    }\n})\n\ndocument.getElementById(\"youtube-container\").addEventListener(\"click\", e => {\n    if (e.target === e.currentTarget) {\n        closeYouTubeVideo(e.currentTarget)\n    }\n})\n\nnew Swiper(\".equipment-section__slider .swiper\", {\n    slidesPerView: 1,\n    spaceBetween: 16,\n    breakpoints: {\n        480: {\n            slidesPerView: \"2\"\n        },\n        768: {\n            slidesPerView: \"3\"\n        },\n        1024: {\n            slidesPerView: 4\n        }\n    },\n    allowTouchMove: false\n})\n\nlet swiperWrapperEl = document.querySelector(\".equipment-section__slider .swiper-wrapper\")\nlet equipmentEls = document.querySelectorAll(\".equipment-section__slider .swiper-slide\")\n\nfunction getScrollAmount() {\n\tlet swiperWidth = document.querySelector(\".equipment-section__slider .swiper\").offsetWidth;\n    let wrapperWidth = 0\n\n    for (let i = 0; i < equipmentEls.length; i++) {\n        wrapperWidth += equipmentEls[i].offsetWidth\n    }\n    \n    wrapperWidth += 16 * (equipmentEls.length - 1)\n\n\treturn swiperWidth - wrapperWidth\n}\n\nlet tween = gsap.to(swiperWrapperEl, {\n\tx: getScrollAmount,\n\tduration: 3,\n\tease: \"none\",\n});\n\nlet scrollTriggerInstance;\n\nscrollTriggerInstance = ScrollTrigger.create({\n    trigger: \".equipment-section\",\n    start: \"bottom bottom\",\n    end: () => `+=${getScrollAmount() * -1}`,\n    ease: \"none\",\n    pin: true,\n    animation: tween,\n    scrub: 1,\n    invalidateOnRefresh: true,\n    markers: false,\n})\n\n// let mm = gsap.matchMedia();\n// let scrollTriggerInstance;\n\n// mm.add(\"(min-width: 577px)\", () => {\n//     if (scrollTriggerInstance) scrollTriggerInstance.kill()\n//     scrollTriggerInstance = ScrollTrigger.create({\n//         trigger: \".equipment-section\",\n//         start: () => `end ${parseInt(getComputedStyle(document.documentElement).fontSize) * -5.625}px`,\n//         end: () => `+=${getScrollAmount() * -1}`,\n//         ease: \"none\",\n//         pin: true,\n//         animation: tween,\n//         scrub: 1,\n//         invalidateOnRefresh: true,\n//         markers: false,\n//     })\n// })\n\n// mm.add(\"(max-width: 576px)\", () => {\n//     if (scrollTriggerInstance) scrollTriggerInstance.kill()\n//     scrollTriggerInstance = ScrollTrigger.create({\n//         trigger: \".equipment-section\",\n//         start: \"end -45px\",\n//         end: () => `+=${getScrollAmount() * -1}`,\n//         ease: \"none\",\n//         pin: true,\n//         animation: tween,\n//         scrub: 1,\n//         invalidateOnRefresh: true,\n//         markers: false,\n//     })\n// })\n\nwindow.addEventListener(\"resize\", () => scrollTriggerInstance.refresh())\n\n;\n\n\n\n\n\n//# sourceURL=webpack://gulp-start/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;