/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/projects.js":
/*!****************************!*\
  !*** ./src/js/projects.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nlet titleSplit = new SplitType(\".projects-section__title\",{\n    types: \"chars\",\n    tagName: \"span\"\n});\n\ngsap.from(\".projects-section__title .char\", {\n    yPercent: 115,\n    opacity: 0,\n    duration: 0.4,\n    ease: \"power1.out\",\n    onStart: () => document.querySelector(\".projects-section\").style.opacity = 1,\n    stagger: {\n        amount: 0.3\n    },\n})\n\nlet projectsMatchMedia = gsap.matchMedia()\nlet projectEls = gsap.utils.toArray(\".project\")\n\nprojectsMatchMedia.add({\n    oneColumn: `(max-width: 920px)`,\n    twoColumn: \"(min-width: 921px)\"\n}, context => {\n    let { oneColumn } = context.conditions\n    projectEls.forEach((projectEl, i) => {\n        let timeline = gsap.timeline({\n            scrollTrigger: {\n                trigger: projectEl,\n                start: \"top 80%\"\n            },\n            delay: oneColumn ? 0 : i % 2 * 0.2\n        })\n        timeline\n            .from(projectEl.querySelector(\".project__img\"), {\n                scale: 1.3,\n                duration: 2.25,\n                ease: \"cubic-bezier(0.38, 0.005, 0.215, 1)\"\n            })\n            .from(projectEl.querySelector(\".project__img\"), {\n                opacity: 0,\n                duration: 0.9,\n                ease: \"cubic-bezier(0.38, 0.005, 0.215, 1)\"\n            }, \"<\")\n            .from(projectEl.querySelector(\".project__content\"), {\n                opacity: 0,\n                duration: 0.5\n            }, 0.5)\n            .from(projectEl.querySelector(\".project__logo\"), {\n                scale: 0.7,\n                opacity: 0,\n                duration: 0.5,\n                ease: \"back.out\"\n            }, \"<\")\n    })\n})\n\ngsap.from(\".projects-section__more\", {\n    scrollTrigger: {\n        trigger: \".projects-section__projects\",\n        start: \"bottom 80%\"\n    },\n    scale: 0.65,\n    opacity: 0.5,\n    duration: 1,\n    ease: \"back.out(2)\",\n})\n\n//# sourceURL=webpack://gulp-start/./src/js/projects.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/projects.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;