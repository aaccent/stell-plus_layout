{"version":3,"file":"contacts.min.js","mappings":"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","sources":["webpack://gulp-start/./src/js/contacts.js"],"sourcesContent":["function init() {\n    const getCoords = async () => {\n        // let response = await fetch(\"../json/coords.json\", {\n        //     method: \"GET\"\n        // });\n\n        setTimeout(() => {\n            mapPins = JSON.parse(`\n                [\n                    {\n                        \"id\": \"1\",\n                        \"title\": \"Центральный офис\",\n                        \"image\": \"./images/contacts/balloon-image.png\",\n                        \"address\": \"Москва, ул. Палехская, д. 131, пом. 1, ком. 10\",\n                        \"time\": \"Пн-Пт: c 09:00 до 18:00\",\n                        \"email\": \"info@stellplus.com\",\n                        \"phone\": \"+74959970687\",\n                        \"phone-mask\": \"+7 (495) 997-06-87\",\n                        \"coord\": [55.75, 37.50]\n                    },\n                    {\n                        \"id\": \"2\",\n                        \"title\": \"Восточный офис\",\n                        \"image\": \"./images/contacts/balloon-image.png\",\n                        \"address\": \"Москва, ул. Палехская, д. 131, пом. 1, ком. 10\",\n                        \"time\": \"Пн-Пт: c 09:00 до 18:00\",\n                        \"email\": \"info@stellplus.com\",\n                        \"phone\": \"+74959970687\",\n                        \"phone-mask\": \"+7 (495) 997-06-87\",\n                        \"coord\": [55.75, 37.71]\n                    },\n                    {\n                        \"id\": \"3\",\n                        \"title\": \"Южный офис\",\n                        \"image\": \"./images/contacts/balloon-image.png\",\n                        \"address\": \"Москва, ул. Палехская, д. 131, пом. 1, ком. 10\",\n                        \"time\": \"Пн-Пт: c 09:00 до 18:00\",\n                        \"email\": \"info@stellplus.com\",\n                        \"phone\": \"+74959970687\",\n                        \"phone-mask\": \"+7 (495) 997-06-87\",\n                        \"coord\": [55.70, 37.70]\n                    }\n                ]            \n            `)\n            setMapPins(mapPins)\n        }, 2000)\n\n        // if (response.ok) {\n        //     let mapPins = await response.json()\n        //     setMapPins(mapPins)\n        // } else {\n        //     console.log(\"Error!!!\")\n        // }\n    }\n\n    function setMapPins(pins) {\n        let myCollection = new ymaps.GeoObjectCollection();\n        \n        // создание и установка пинов\n        for (var i = 0; i < pins.length; i++) {\n            myCollection.add(new ymaps.Placemark(pins[i].coord, {\n                pinData: pins[i]\n            }, {\n                iconLayout: \"default#image\",\n                iconImageHref: i === 0 ? imagesSrc.pinActiveImage : imagesSrc.pinImage,\n                iconImageSize: [60, 60],\n            }));\n        }\n        // добавление пинов на карту\n        map.geoObjects.add(myCollection);\n\n        // обработки кликов по пинам на карте\n        let activePinId;\n        myCollection.events.add(\"click\", e => {\n            let pinData = e.get(\"target\").properties.get(\"pinData\");\n            if (activePinId === pinData.id) {\n                return\n            }\n            let query = ymaps.geoQuery(map.geoObjects);\n\n            for (let i = 0; i < query.getLength(); i++) {\n                let el = query.get(i);\n                el.options.set('iconImageHref', imagesSrc.pinImage)                \n            }\n\n            // установка пина по центру карты\n            // map.panTo(pinData.coord, { duration: 300 })\n            \n            e.get('target').options.set('iconImageHref', imagesSrc.pinActiveImage)  \n\n            const balloonEl = document.querySelector(\".balloon\")\n            if (balloonEl.classList.contains(\"balloon_open\")) {\n                let balloonContentEl = balloonEl.querySelector(\".balloon__content\")\n                balloonContentEl.style.opacity = \"0\"\n                balloonContentEl.addEventListener(\"transitionend\", (e) => {\n                    loadBalloon(pinData)\n                    e.target.style.opacity = \"\"\n                })\n            } else {\n                balloonEl.classList.add(\"balloon_open\")            \n            }\n            activePinId = pinData.id\n        })\n        // первоначальная инициализация карты\n        loadBalloon(mapPins[0])\n        document.querySelector(\".balloon\").classList.add(\"balloon_open\")\n        map.panTo(mapPins[0].coord, { duration: 150 })\n    }\n\n    function loadBalloon(data) {\n        let balloonHeaderTemplate = `<h4 class=\"balloon__title\">${data.title}</h4>`\n        let balloonImageTemplate = `\n            <div class=\"balloon__img\">\n                <img src=\"${data.image}\" alt=\"\">\n            </div>`\n        let balloonInfoTemplate = `\n            <div class=\"balloon__info\"> \n                <div class=\"balloon__address\">\n                    <span class=\"icon-map-pin\"></span>\n                    <span>${data.address}</span>\n                </div>\n                <div class=\"balloon__time\">\n                    <span class=\"icon-clock\"></span>\n                    <span>${data.time}</span>\n                </div>\n                <div class=\"balloon__phone\">\n                    <span class=\"icon-phone\"> </span>\n                    <a href=\"tel:${data.phone}\">${data[\"phone-mask\"]} </a>\n                </div>\n                <div class=\"balloon__email\">\n                    <span class=\"icon-email\"></span>\n                    <a href=\"mailto:${data.email}\">${data.email}</a>\n                </div>\n            </div>\n        `\n        let balloonLinkTemplate = `\n            <a \n                class=\"balloon__link link\" \n                href=\"https://yandex.com/maps/?mode=routes&rtext=~${data.coord[0]}%2C${data.coord[1]}&rtt=auto\"\n                target=\"_blank\"\n            >Проложить маршрут</a>`\n        let balloonContentTemplate = `\n            <div class=\"balloon__content\">\n                ${balloonHeaderTemplate}\n                ${balloonImageTemplate}\n                ${balloonInfoTemplate}\n                ${balloonLinkTemplate}\n            </div>\n        `\n        document.getElementById(\"balloon\").innerHTML = balloonContentTemplate\n    }\n\n    let mapPins;\n    // создание карты\n    let map = new ymaps.Map(\"map\", {\n        center: [55.75,37.60],\n        controls: [],\n        zoom: 12,\n    })\n\n    let imagesSrc = document.getElementById(\"map\").dataset\n\n    // Создадим пользовательский макет ползунка масштаба.\n    let ZoomLayout = ymaps.templateLayoutFactory.createClass(`\n        <div id=\"zoom-controls\">\n            <button id='zoom-out' type='button'><img src='${imagesSrc.zoomOutImage}'></button>\n            <button id='zoom-in' type='button'><img src='${imagesSrc.zoomInImage}'></button>\n        </div>`, {\n\n        // Переопределяем методы макета, чтобы выполнять дополнительные действия\n        // при построении и очистке макета.\n        build: function () {\n            // Вызываем родительский метод build.\n            ZoomLayout.superclass.build.call(this);\n\n            // Привязываем функции-обработчики к контексту и сохраняем ссылки\n            // на них, чтобы потом отписаться от событий.\n            this.zoomInCallback = ymaps.util.bind(this.zoomIn, this);\n            this.zoomOutCallback = ymaps.util.bind(this.zoomOut, this);\n\n            // Начинаем слушать клики на кнопках макета.\n            document.getElementById(\"zoom-in\").addEventListener('click', this.zoomInCallback);\n            document.getElementById(\"zoom-out\").addEventListener('click', this.zoomOutCallback);\n        },\n\n        clear: function () {\n            // Снимаем обработчики кликов.\n            document.getElementById('zoom-in').removeEventListener('click', this.zoomInCallback);\n            document.getElementById('zoom-out').removeEventListener('click', this.zoomOutCallback);\n\n            // Вызываем родительский метод clear.\n            ZoomLayout.superclass.clear.call(this);\n        },\n\n        zoomIn: function () {\n            let map = this.getData().control.getMap();\n            map.setZoom(map.getZoom() + 1, {checkZoomRange: true, duration: 300});\n            // if (map.getZoom() >= 12) {\n            //     document.getElementById(\"zoom-out\").disabled = false\n            // }\n        },\n\n        zoomOut: function () {\n            let map = this.getData().control.getMap();\n            map.setZoom(map.getZoom() - 1, {checkZoomRange: true, duration: 300});\n            // if (map.getZoom() <= 13) {\n            //     document.getElementById(\"zoom-out\").disabled = true\n            // }\n        }\n    });\n\n    let zoomControl = new ymaps.control.ZoomControl({\n        options: {\n            layout: ZoomLayout,\n            position: {\n                right: \"2%\",\n                bottom: 32\n            } \n        }\n    });\n\n    map.controls.add(zoomControl);\n    getCoords()\n    \n    map.events.add(\"click\", () =>  {\n        let query = ymaps.geoQuery(map.geoObjects);\n\n        for (let i = 0; i < query.getLength(); i++) {\n            let el = query.get(i);\n            el.options.set('iconImageHref', imagesSrc.pinImage)                \n        }\n        document.getElementById(\"balloon\").classList.remove(\"balloon_open\")\n    })\n    \n    \n    // zoom ctrl + mouse wheel\n    let ctrlKey = false\n    let body = document.getElementsByTagName('body')[0];\n    map.behaviors.disable(['scrollZoom']);\n    body.onkeydown = callbackDown;\n    body.onkeyup = callbackUp;\n    function callbackDown(e){\n        if(e.keyCode === 17 && !ctrlKey){\n            ctrlKey = true\n            map.behaviors.enable(['scrollZoom']);\n        }\n    }\n    function callbackUp(e){\n        if(e.keyCode === 17){\n            ctrlKey = false\n            map.behaviors.disable(['scrollZoom']);\n        }\n    }\n}\n\nymaps.ready(init);\n\ndocument.querySelectorAll(\".departments-section__tab-button\").forEach(tabButtonEl => {\n    tabButtonEl.addEventListener(\"click\", e => {\n        let targetEl = e.target;\n        let departmentName = targetEl.dataset.department;\n        let departmentsContainer = document.querySelector(\".departments-section__departments\");\n        \n        document.querySelector(\".departments-section__tab-button_active\").classList.remove(\"departments-section__tab-button_active\")\n        targetEl.classList.add(\"departments-section__tab-button_active\")\n        \n        departmentsContainer.style.opacity = \"0\"\n        departmentsContainer.addEventListener(\"transitionend\", () => {\n            let activeDepartmentClass = \"departments-section__department_active\"\n            departmentsContainer.querySelector(\".\" + activeDepartmentClass).classList.remove(activeDepartmentClass)\n            departmentsContainer.querySelector(\".departments-section__department_\" + departmentName).classList.add(activeDepartmentClass);\n            departmentSlider.destroy()\n            initDepartmentSlider()\n            initDepartmentAnimation()\n            departmentsContainer.style.opacity = \"\";\n         }, { once: true })\n\n    })\n})\n\nfunction initDepartmentSlider() {\n    departmentSlider = new Swiper(\".departments-section__department_active .swiper\", {\n        slidesPerView: 1.2,\n        spaceBetween: 16,\n        allowTouchMove: false,\n        // observer: true,\n        // observeParents: true,\n        // watchOverflow: true,\n        breakpoints: {\n            576: {\n                slidesPerView: 1.5\n            },\n            768: {\n                slidesPerView: 2\n            },\n            961: {\n                slidesPerView: 3\n            },\n            1341: {\n                slidesPerView: 4\n            }\n        },\n    })\n}\n\nfunction getScrollAmount() {\n    let swiperWidth = document.querySelector(\".departments-section__department_active\").offsetWidth;\n    let employeeEls = document.querySelectorAll(\".departments-section__department_active .employee\")\n    let wrapperWidth = 0\n\n    for (let i = 0; i < employeeEls.length; i++) {\n        wrapperWidth += employeeEls[i].offsetWidth\n    }\n    \n    wrapperWidth += 16 * (employeeEls.length - 1)\n\n    if (swiperWidth >= wrapperWidth)\n        return 0\n    \n    return `+=${(swiperWidth - wrapperWidth)}px`\n}\n\nfunction initDepartmentAnimation() {\n    departmentsAnimation?.kill()\n    departmentsBodyTween?.kill()\n    let deltaX = getScrollAmount()\n    \n    if (deltaX === 0) {\n        let scrollYOffset = mapSection.offsetTop + mapSection.offsetHeight + departmentsSection.offsetHeight - window.innerHeight;\n        if (window.pageYOffset >= scrollYOffset) {\n            window.scrollTo(0, scrollYOffset)\n        }\n        return\n    }\n    footerCommercialAnimation?.kill()\n\n    let tween = gsap.to(\".departments-section__department_active .swiper-wrapper\", {\n        x: deltaX,\n        duration: 3,\n        ease: \"none\",\n    })\n\n    departmentsAnimation = ScrollTrigger.create({\n        trigger: \".departments-section\",\n        start: () => {\n            let remValue = getComputedStyle(document.documentElement).fontSize;\n            return document.querySelector(\".departments-section\").offsetHeight < window.innerHeight ? `top+=${parseFloat(remValue)}  top` : \"bottom bottom\"\n        },\n        ease: \"none\",\n        pin: true,\n        animation: tween,\n        scrub: 1,\n        invalidateOnRefresh: true,\n    })\n\n    footerCommercialAnimation = gsap.to(\".footer__commercial\", {\n        scrollTrigger: {\n            trigger: \".footer__commercial\",\n            start: \"top center\",\n            end: \"top 10%\",\n            scrub: 1,\n            markers: true,\n        },\n        marginBottom: () => -document.querySelector(\".footer__commercial\").offsetHeight,\n    });\n\n    departmentsBodyTween = gsap.to(\".departments-section .section__body\", {\n        y: 0.15 * ScrollTrigger.maxScroll(window) ,\n        ease: \"none\",\n        scrollTrigger: {\n            trigger: \".footer\",\n            start: \"top 75%\",\n            end: \"max\",\n            invalidateOnRefresh: true,\n            scrub: 0\n        }\n    });\n}\n\nlet departmentSlider, departmentsAnimation, departmentsBodyTween, footerCommercialAnimation;\nconst mapSection = document.querySelector(\".map-section\")\nconst departmentsSection = document.querySelector(\".departments-section\")\ninitDepartmentSlider()\n\n// animations\nScrollTrigger.create({\n    trigger: \".map-section\",\n    start: (self) => {\n        let remValue = parseFloat(getComputedStyle(document.documentElement).fontSize);\n        return self.offsetHeight < window.innerHeight ? `${remValue}  top` : \"bottom bottom\"\n    },\n    pin: true,\n    pinSpacing: false,\n})\n\ngsap.from(\".departments-section__departments\", {\n    scrollTrigger: {\n        trigger: \".departments-section__departments\",\n        start: \"top 80%\"\n    },\n    yPercent: 10,\n    opacity: 0,\n    duration: 0.6\n})\n\ninitDepartmentAnimation()\n"],"names":["initDepartmentSlider","departmentSlider","Swiper","slidesPerView","spaceBetween","allowTouchMove","breakpoints","initDepartmentAnimation","departmentsAnimation","kill","departmentsBodyTween","deltaX","swiperWidth","document","querySelector","offsetWidth","employeeEls","querySelectorAll","wrapperWidth","i","length","getScrollAmount","scrollYOffset","mapSection","offsetTop","offsetHeight","departmentsSection","window","innerHeight","pageYOffset","scrollTo","footerCommercialAnimation","tween","gsap","to","x","duration","ease","ScrollTrigger","create","trigger","start","remValue","getComputedStyle","documentElement","fontSize","parseFloat","pin","animation","scrub","invalidateOnRefresh","scrollTrigger","end","markers","marginBottom","y","maxScroll","ymaps","ready","loadBalloon","data","balloonContentTemplate","title","image","address","time","phone","email","coord","getElementById","innerHTML","mapPins","map","Map","center","controls","zoom","imagesSrc","dataset","ZoomLayout","templateLayoutFactory","createClass","zoomOutImage","zoomInImage","build","superclass","call","this","zoomInCallback","util","bind","zoomIn","zoomOutCallback","zoomOut","addEventListener","clear","removeEventListener","getData","control","getMap","setZoom","getZoom","checkZoomRange","zoomControl","ZoomControl","options","layout","position","right","bottom","add","async","setTimeout","JSON","parse","pins","activePinId","myCollection","GeoObjectCollection","Placemark","pinData","iconLayout","iconImageHref","pinActiveImage","pinImage","iconImageSize","geoObjects","events","e","get","properties","id","query","geoQuery","getLength","set","balloonEl","classList","contains","balloonContentEl","style","opacity","target","panTo","setMapPins","getCoords","remove","ctrlKey","body","getElementsByTagName","behaviors","disable","onkeydown","keyCode","enable","onkeyup","forEach","tabButtonEl","targetEl","departmentName","department","departmentsContainer","activeDepartmentClass","destroy","once","self","pinSpacing","from","yPercent"],"sourceRoot":""}